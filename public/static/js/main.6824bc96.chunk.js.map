{"version":3,"sources":["types/types.ts","reducers/authReducer.ts","reducers/calendarReducers.ts","reducers/uiReducers.ts","reducers/rootReducers.ts","store/store.ts","helpers/fetch.ts","helpers/prepareEvents.ts","actions/eventos.ts","actions/auth.ts","components/ui/Navbar.tsx","helpers/calendar-messages-es.ts","components/calendar/CalendarEvent.tsx","actions/ui.ts","events/eventsCalendarScreen.tsx","helpers/centerModal.ts","events/eventsCalendarModal.tsx","components/calendar/CalendarModal.tsx","components/ui/AddNewFab.tsx","components/ui/DeleteEventFab.tsx","components/calendar/CalendarScreen.tsx","hook/useForm.ts","components/auth/LoginScreen.tsx","components/router/PublicRoute.js","components/router/PrivateRoute.js","components/router/AppRouter.tsx","CalendarApp.tsx","index.tsx"],"names":["type","initialState","checking","uid","name","events","activeEvent","openModal","rootReducers","combineReducers","ui","state","action","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","urlBase","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","e","user_id","_id","end","moment","toDate","start","addEventNew","clearEventActive","eventUpdated","eventDeleted","eventLoaded","date","Date","getTime","checkingFinish","login","user","logout","Navbar","dispatch","useDispatch","useSelector","className","onClick","a","clear","messages","allDay","previous","next","today","month","week","day","agenda","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","EventsCalendarScreen","useState","lastView","setLastView","useEffect","getState","response","json","ok","console","log","eventStyleGetter","isSelected","style","backgroundColor","borderRadius","opacity","display","color","onDoubleClick","onSelectEvent","eventActive","changeOnView","view","setItem","customStyles","content","top","left","right","bottom","marginRight","transform","dateStart","second","add","dateEnd","initEvent","note","EventsCalendarModal","startDate","setStartDate","endDate","setEndDate","titleValid","setTitleValid","formValues","setFormValues","claerForm","valideteDate","initial","isSameOrBefore","closeModal","variables","functions","handleSubmit","preventDefault","fourMinutes","subtract","fifteenPlus","ValidateDateCurrentWithStart","ValidateDateStartWithEnd","trim","length","Swal","fire","msg","eventStartUpdated","addEventNewDB","now","icon","text","handleStartDate","handleEndDate","filterTime","handleInputChange","target","value","Modal","setAppElement","CalendarModal","isOpen","onRequestClose","closeTimeoutMS","overlayClassName","onSubmit","selected","onChange","showTimeSelect","timeFormat","timeIntervals","dateFormat","minDate","placeholder","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","startAccessor","endAccessor","eventPropGetter","onDoubleClickEvent","onView","onSelectSlot","selectable","components","useForm","values","setValues","LoginScreen","lEmail","lPassword","loginValues","rName","rEmail","rPassword","rPassword2","registerValues","handleRegisterInputChange","email","password","toString","PublicRoute","isLoggedIn","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6824bc96.chunk.js","sourcesContent":["export const type = {\n  uiOpenModal: '[UI] Open Modal',\n  uiCloseModal: '[UI] Close Modal',\n  \n  eventAddNew: '[EVENT] Add New',\n  eventStartAddnew: '[EVENT] Start Add New',\n  eventSetActive: '[EVENT] Set Active',\n  eventClearEventActive: '[EVENT] Clean Event Active',\n  eventUpdated: '[EVENT] Event Updated',\n  eventDeleted: '[EVENT] Event Deleted',\n  eventLoaded: '[EVENT] Events Loaded',\n  eventClear : '[EVENT] Clear List Events',\n  \n  authCheckingFinish: '[AUTH] Finish Checking Login state',\n  authStartLogin: '[AUTH] Start login',\n  authLogin:  '[AUTH] login', \n  authStartRegister:  '[AUTH] Start Register', \n  authStartTokenRenew:  '[AUTH] Start Token Renew', \n  authLogout:  '[AUTH] Logout', \n}","import { type } from \"../types/types\";\n\nexport interface initialStateAuth{\n  checking: boolean,\n  uid: string,\n  name: string\n}\ninterface action{\n  type: string,\n  payload: initialStateAuth\n}\n\nconst initialState: initialStateAuth = {\n  checking: true,\n  uid: '',\n  name: ''\n}\n\nexport const authReducer = (state: initialStateAuth = initialState, action: action): initialStateAuth | object => {\n  switch (action.type) {\n    case type.authLogin:\n      return{\n        ...state,\n        ...action.payload,\n        checking: false,\n      }\n      case type.authCheckingFinish:\n        return{\n          ...state,\n          checking: false\n        }\n      case type.authLogout:\n        return{\n          checking: false\n        }\n    default:\n      return state\n  }\n}\n","import {event} from '../ts/interfaces-type';\nimport { type } from \"../types/types\";\n\n\nexport interface initialStateCalendar{\n  events: event[],\n  activeEvent: event | any\n}\ninterface Action {\n  type: string,\n  payload: event | any\n}\n\nconst initialState: initialStateCalendar = {\n  events:[],\n  activeEvent:{}\n}\nexport const calendarReducers = (state: initialStateCalendar = initialState, action: Action ): initialStateCalendar | object => {\n  switch (action.type) {\n    case type.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload]\n      }\n    case type.eventSetActive:\n      return{\n        ...state,\n        activeEvent: action.payload, \n      }\n    case type.eventClearEventActive:\n      return{\n        ...state,\n        activeEvent: {}\n      }\n    case type.eventUpdated:\n      return{\n        ...state,\n        events: state.events.map((event: event) => \n          (event.id === action.payload.id) ? action.payload : event  \n        )\n      }\n    case type.eventDeleted:\n      return{\n        ...state,\n        events: state.events.filter((event: event) => event.id !== action.payload.id),\n        activeEvent:{}\n      }\n    case type.eventLoaded:\n      return{\n        ...state,\n        events: [ ...action.payload ] \n      }\n    case type.eventClear:\n      return{\n        events:[],\n        activeEvent:{}\n      }\n\n    default:\n      return state;\n  }\n}\n","import { type } from \"../types/types\";\n\ninterface InitialState {\n  openModal : boolean,\n}\nconst initialState: InitialState = {\n  openModal : false,\n}\nexport const uiReducers = (state: InitialState = initialState, action:any) => {\n  switch (action.type) {\n    case type.uiOpenModal:\n      return {\n        ...state,\n        openModal: true\n      };\n    case type.uiCloseModal:\n      return {\n        ...state,\n        openModal: false\n      };\n    default:\n    return state;\n  }\n}","import { combineReducers } from 'redux'\nimport { authReducer } from './authReducer'\nimport { calendarReducers } from './calendarReducers'\nimport { uiReducers } from './uiReducers'\n\nexport const rootReducers = combineReducers({\n    ui: uiReducers,\n    calendar: calendarReducers,\n    auth: authReducer\n})","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducers } from '../reducers/rootReducers';\n\ndeclare global {\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose \n\n\nexport const store = createStore(\n  rootReducers,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n);","const urlBase = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = (endpoint: string, data: object, method: string = 'GET') => {\n  const url: string = `${urlBase}/${endpoint}`  // http://localhost:4000/api\n  if (method === 'GET') {\n    return fetch(url);\n  } else {\n    return fetch (url, {\n      method,\n      headers: {\n        'Content-type' : 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n  }\n}\n\nconst fetchConToken = (endpoint: string, data?: object, method: string = 'GET') => {\n  const url: string = `${urlBase}/${endpoint}`  // http://localhost:4000/api\n  const token: string = localStorage.getItem('token') || ''\n  if (method === 'GET') {\n    return fetch(url,{\n      method,\n      headers:{\n        'x-token': token\n      }\n    });\n  } else {\n    return fetch (url, {\n      method,\n      headers: {\n        'Content-type' : 'application/json',\n        'x-token': token\n      },\n      body: JSON.stringify(data)\n    });\n  }\n}\n\nexport{\n  fetchSinToken,\n  fetchConToken\n}","import moment from 'moment'\nimport { event } from '../ts/interfaces-type'\n\nexport const prepareEvents = (events: event[] = [], id : string) => {\n  return events.filter((e: any) => {\n    if (e.user_id._id === id){\n      e.end = moment(e.end).toDate();\n      e.start = moment(e.start).toDate();\n      return e\n    }\n    return false\n  });\n}\n","import Swal from 'sweetalert2';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport { event } from '../ts/interfaces-type';\nimport { type } from '../types/types';\n\nexport const addEventNewDB = (event: event) => { \n    return async(dispatch: Function, getState: any) => { \n        const auth = getState().auth\n        try {\n            const response = await fetchConToken('events', event, 'POST');\n            const body = await response.json();\n            if(body.ok){\n                event.id = body.event.id\n                event.user ={\n                    uid: auth.uid,\n                    name: auth.name\n                }\n                dispatch(addEventNew(event));\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\nconst addEventNew = (event: event): object =>({\n    type: type.eventAddNew,\n    payload: event,\n});\n\nexport const eventActive = (event: event): object =>({\n    type: type.eventSetActive,\n    payload: event,\n});\n\nexport const clearEventActive = (): object => ({\n    type: type.eventClearEventActive\n});\nexport const eventStartUpdated = (event: event) => { \n    return async (dispatch: Function) => {\n        try {\n            const response = await fetchConToken(`events/${event.id}`, event, 'PUT');\n            const body = await response.json();\n            if (body.ok) {\n                dispatch(eventUpdated(event));\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\nconst eventUpdated = (event: event): object =>({\n    type: type.eventUpdated,\n    payload:event\n});\n\nexport const eventStartDeleted = () => { \n    return async (dispatch: Function, getState: any) => {\n        const {id}:{id: string} = getState().calendar.activeEvent\n        try {\n            const response = await fetchConToken(`events/${id}`,{},'DELETE');\n            const body = await response.json();\n            if (body.ok) {\n                dispatch(eventDeleted(id));\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventDeleted = (id: string): object =>({\n    type: type.eventDeleted,\n    payload:{id}\n});\n\nexport const eventStartLoading = () => {\n    return async (dispatch: Function, getState: any) => {\n        const {uid} = getState().auth;\n        try {\n            const response = await fetchConToken('events');\n            const body = await response.json();\n            if (body.ok) {\n                const events = prepareEvents(body.events, uid);\n                dispatch( eventLoaded(events));\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventLoaded = (events: event[]): object => ({\n    type: type.eventLoaded,\n    payload: events\n});\n\nexport const clearListEvents = () =>({ type: type.eventClear});","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { type } from \"../types/types\";\nimport { clearListEvents } from \"./eventos\";\n\ninterface Body{\n  name: string,\n  ok: boolean,\n  token: string,\n  uid: string,\n  msg:  string,\n  user_id: string\n}\n\nconst date = new Date().getTime();\n\nexport const startLogin = (email: string, password: string): any => {\n  return async(dispatch: Function) => {\n    const response = await fetchSinToken('auth', {email, password}, 'POST');\n    const body: Body = await response.json();\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', date.toString());\n      dispatch( login({\n        uid: body.uid,\n        name: body.name\n      }))\n    }else{\n      Swal.fire('Error', body.msg, 'error');\n    } \n  }\n}\n\nexport const startRegister = (name: string, email: string, password: string) => {\n  return async (dispatch:Function) => {\n    const response = await fetchSinToken('auth/new', {name, email, password}, 'POST');\n    const body: Body = await response.json();\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', date.toString());\n      dispatch( login({\n        uid: body.uid,\n        name: body.name\n      }))\n    }else{\n      Swal.fire('Error', body.msg, 'error');\n    }\n  }\n}\n\nexport const startChecking = () => {\n  return async (dispatch:Function) => {\n    const response = await fetchConToken('auth/renew');\n    const body: Body = await response.json();\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', date.toString());\n      dispatch( login({\n        uid: body.user_id,\n        name: body.name\n      }))\n    } else {\n      dispatch(checkingFinish());\n    }\n  }\n}\n\nconst checkingFinish = () => ({ type: type.authCheckingFinish});\n\nconst login = ( user: {uid:string, name: string}) => ({\n  type: type.authLogin,\n  payload: user\n});\n\nexport const startLogout = () => {\n  return async (dispatch: Function) => {\n    localStorage.clear();\n    await dispatch(clearListEvents());\n    dispatch(logout());\n  }\n}\nconst logout = () => ({type: type.authLogout})","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { State } from '../../ts/interfaces-type';\n\nexport const Navbar = () => {\n  const dispatch = useDispatch()\n  const {name} = useSelector((state: State) => state.auth)\n  const handleLogout = () => {\n    dispatch(startLogout());\n  }\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">{name}</span>\n      <button \n        className=\"btn btn-outline-danger\"\n        onClick={handleLogout}\n      >\n        <i className=\"fas fa-sign-out-alt\" />\n        <span> Salir</span>\n      </button>\n    </div>\n  );\n} ","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: (total:number) => `+ Ver más (${total})`\n};","import React from 'react';\n\nexport const CalendarEvent = ({ event }: any) => {\n  const { title, user_id : user } = event\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span>{`${user?.name ? ` - ${user.name}` : ''}`}</span>\n    </div>\n  )\n}\n","import {type} from '../types/types'\nexport const uiOpenModal = () => ({ type :  type.uiOpenModal });\nexport const uiClosedModal = () => ({ type :  type.uiCloseModal });","import { useEffect, useState } from 'react';\nimport {stringOrDate, View} from 'react-big-calendar';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../actions/ui';\nimport { event } from '../ts/interfaces-type';\nimport {eventActive} from '../actions/eventos';\nimport {eventStartLoading} from '../actions/eventos'\n\nexport const EventsCalendarScreen = () => {\n    const dispatch = useDispatch();\n    const view:View = 'month';\n    const [lastView, setLastView] = useState((localStorage.getItem('lastView') as View) || view);\n    const eventStyleGetter = (event:any, start:stringOrDate, end:stringOrDate, isSelected:boolean):any => {\n      const style = {\n        backgroundColor : '#367cf7',\n        borderRadius: '3px',\n        opacity: 0.8,\n        display: 'block',\n        color: 'white'\n      }\n      return{\n        style\n      }\n    }\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch]);\n    const onDoubleClick = (event: event) => {\n      dispatch(uiOpenModal());\n    }\n    const onSelectEvent = (event: event) => {\n      dispatch(eventActive(event));\n    }\n    const changeOnView = (view:View) => {\n      setLastView(view);\n      localStorage.setItem('lastView', view);\n    }\n    return{ \n      lastView,\n      eventStyleGetter,\n      onDoubleClick,\n      onSelectEvent,\n      changeOnView,   \n    }\n}\n","export const customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};","import React, { useEffect, useState } from 'react'\nimport moment from 'moment';\nimport Swal from 'sweetalert2'\nimport { stringOrDate } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { event, State } from '../ts/interfaces-type';\nimport {uiClosedModal} from '../actions/ui'\nimport { addEventNewDB, clearEventActive, eventStartUpdated } from '../actions/eventos';\n\nconst dateStart: stringOrDate = moment().second(0).add(5, 'minutes').toDate();\nconst dateEnd: stringOrDate = moment().second(0).add(20, 'minutes').toDate();\n\nconst initEvent: event = {\n  title: '',\n  start: dateStart,\n  end: dateEnd,\n  note: ''\n}\nexport const EventsCalendarModal = () => {\n  const dispatch = useDispatch();\n\tconst { openModal }= useSelector((state: State) => state.ui);\n\tconst {activeEvent}= useSelector((state: State) => state.calendar)\n\t\n\tconst [startDate, setStartDate] = useState(dateStart);\n\tconst [endDate, setEndDate] = useState(dateEnd);\n\tconst [titleValid, setTitleValid] = useState(true)\n\tconst [formValues, setFormValues] = useState <event> (initEvent);\n\tconst {title} = formValues;\n\t\n\tuseEffect(() => {\n\t\tif(activeEvent.id){\n\t\t\tsetFormValues(activeEvent);\n\t\t\tsetStartDate(moment(activeEvent.start).toDate());\n\t\t\tsetEndDate(moment(activeEvent.end).toDate());\n\t\t}else{\n\t\t\tclaerForm();\n\t\t}\n\t}, [activeEvent]);\n\t\n\tconst claerForm = () =>{\n\t\tsetFormValues(initEvent);\n\t\tsetStartDate(dateStart);\n\t\tsetEndDate(dateEnd);\n\t}\n\tconst handleInputChange = (event:any): void =>{\n\t\tconst target:any = event.target;\n\t\tsetFormValues({\n\t\t\t...formValues,\n\t\t\t[target.name]:target.value\n\t\t});\n\t}\n\tconst valideteDate = (initial: stringOrDate, end: stringOrDate): boolean => (\n\t\tmoment(initial).isSameOrBefore(end) ?  true : false\n\t);\n\tconst filterTime = (initial:Date, time: Date, ): boolean => {\n\t\tconst validated = valideteDate(initial, time);\n\t\treturn validated;\n\t}\n\tconst handleStartDate = (date: Date) :void =>{\n\t\tsetStartDate(date);\n\t\tsetFormValues({\n\t\t\t...formValues,\n\t\t\tstart: date\n\t\t});\n\t}\n\tconst handleEndDate = (date: Date): void =>{\n\t\tsetEndDate(date);\n\t\tsetFormValues({\n\t\t\t...formValues,\n\t\t\tend: date\n\t\t});\n\t}\n\tconst handleSubmit = (event:React.FormEvent):void => {\n\t\tevent.preventDefault();\n\t\tconst fourMinutes: stringOrDate = moment(dateStart).subtract(1, 'minutes').toDate();\n\t\tconst fifteenPlus: stringOrDate = moment(startDate).add(14, 'minutes').toDate();\n\t\tconst ValidateDateCurrentWithStart = valideteDate(fourMinutes, startDate);\n\t\tconst ValidateDateStartWithEnd = valideteDate(fifteenPlus, endDate);\n\t\t\n\t\tif (!ValidateDateCurrentWithStart){\n\t\t\tSwal.fire({\n\t\t\t\ticon: 'error',\n\t\t\t\ttitle: 'Error',\n\t\t\t\ttext: 'El evento debe iniciar 5 minutos después de la hora actual',\n\t\t\t});\n\t\t\tsetStartDate(dateStart);\n\t\t\tsetEndDate(moment(dateStart).add(15, 'minutes').toDate());\n\t\t\treturn;\n\t\t}\n\t\tif (!ValidateDateStartWithEnd){ \n\t\t\tSwal.fire({\n\t\t\t\ticon: 'error',\n\t\t\t\ttitle: 'Error',\n\t\t\t\ttext: 'El evento debe finalizar mínimo 15 minutos después de la fecha inicial',\n\t\t\t});\n\t\t\tsetEndDate(moment(startDate).add(15, 'minutes').toDate());\n\t\t\treturn;\n\t\t}\n\t\tif(title.trim().length === 0) return setTitleValid(false);\n\t\t//TODO: Registrar en la DB\n\t\t\n\t\tif(activeEvent.id){\n\t\t\tdispatch(\n\t\t\t\teventStartUpdated({\n\t\t\t\t\t...formValues,\n\t\t\t\t\tid: activeEvent.id,\n\t\t\t\t\tuser: activeEvent.user_id\n\t\t\t\t})\n\t\t\t);\n\t\t}else{\n\t\t\tdispatch(addEventNewDB({\n\t\t\t\t...formValues,\n\t\t\t\tid: Date.now(),\n\t\t\t\tuser:{\n\t\t\t\t\tuid: '111',\n\t\t\t\t\tname: 'Maximo'\n\t\t\t\t},\n\t\t\t}));\n\t\t} \n\t\tsetTitleValid(true);\n\t\tcloseModal();\n\t}\n\tconst closeModal = (): void => {\n\t\tdispatch(uiClosedModal());\n\t\tdispatch(clearEventActive());\n\t\tclaerForm();\n\t}\n\treturn {\n\t\tvariables:{\n\t\t\topenModal,\n\t\t\tactiveEvent,\n\t\t\tstartDate,\n\t\t\tdateStart,\n\t\t\tendDate,\n\t\t\tformValues,\n\t\t\ttitleValid,\n\t\t},\n\t\tfunctions:{\n\t\t\tcloseModal,\n\t\t\thandleSubmit,\n\t\t\thandleStartDate,\n\t\t\thandleEndDate,\n\t\t\tfilterTime,\n\t\t\thandleInputChange,\n\t\t}\n\t}\n}","import React from 'react';\nimport Modal from 'react-modal';\nimport DatePicker from 'react-datepicker';\n\nimport { customStyles } from '../../helpers/centerModal';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport '../../style.css';\nimport { EventsCalendarModal } from '../../events/eventsCalendarModal';\n\nModal.setAppElement('#root');\n\nexport const CalendarModal = () => {\n  const {variables, functions}= EventsCalendarModal();\n  const {\n    openModal,\n    activeEvent,\n    startDate,\n    dateStart,\n    endDate,\n    formValues,\n    titleValid,\n  } = variables;\n  const {\n    closeModal,\n    handleSubmit,\n    handleStartDate,\n    handleEndDate,\n    filterTime,\n    handleInputChange,\n  } = functions;\n  \n  return (\n    <Modal\n      isOpen={openModal}\n      // onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n      <h1>{activeEvent.id ? 'Editar evento' : 'Nuevo evento'}</h1>\n      <hr />\n      <form \n        className=\"container\"\n        onSubmit={handleSubmit}\n      >\n\n      <div className=\"form-group\">\n        <div>\n          <label>Fecha y hora inicio</label>\n        </div>\n        <DatePicker\n          selected={startDate}\n          onChange={handleStartDate}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          dateFormat=\"MMMM d, yyyy HH:mm\"\n          filterTime={(date: Date) => filterTime(dateStart, date)}\n          minDate={dateStart}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <div>\n          <label>Fecha y hora fin</label>\n        </div>\n        <DatePicker\n          selected={endDate}\n          onChange={handleEndDate}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          dateFormat=\"MMMM d, yyyy HH:mm\"\n          filterTime={(date: Date) => filterTime(startDate, date)}\n          minDate={startDate}\n          className=\"form-control\"\n        />\n      </div>\n\n      <hr />\n      <div className=\"form-group\">\n        <label>Titulo y notas</label>\n        <input \n          type=\"text\" \n          className={`form-control ${!titleValid && 'is-invalid'}`}\n          placeholder=\"Título del evento\"\n          name=\"title\"\n          autoComplete=\"off\"\n          value={formValues.title}\n          onChange={handleInputChange}\n        />\n        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n      </div>\n\n      <div className=\"form-group\">\n        <textarea  \n          className=\"form-control\"\n          placeholder=\"Notas\"\n          rows={5}\n          name=\"note\"\n          value={formValues.note}\n          onChange={handleInputChange}\n        ></textarea>\n        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-outline-primary btn-block\"\n      >\n        <i className=\"far fa-save\"></i>\n        <span> Guardar</span>\n      </button>\n    </form>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearEventActive } from '../../actions/eventos';\nimport {uiOpenModal} from '../../actions/ui';\nimport { State } from '../../ts/interfaces-type';\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch();\n  const {activeEvent} = useSelector((state: State) => state.calendar)\n  \n  const handleClickNewEvent = () =>{\n    activeEvent.id && dispatch(clearEventActive())\n    dispatch(uiOpenModal());\n  }\n  return (\n    <button \n      className=\"btn btn-primary fab\"\n      onClick={handleClickNewEvent}\n    >\n      <i className=\"fas fa-plus\"></i>\n    </button>\n  )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDeleted } from '../../actions/eventos';\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n  const handleClickDelete = () => {\n    dispatch(eventStartDeleted());\n  }\n  return (\n    <button \n      className=\"btn btn-danger fab-danger\"\n      onClick={handleClickDelete}\n    >\n      <i className=\"fas fa-trash\"></i>\n      <span>Borrar</span>\n    </button>\n  )\n}","import React from 'react';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { State } from '../../ts/interfaces-type';\nimport { EventsCalendarScreen } from '../../events/eventsCalendarScreen';\nimport { CalendarModal } from './CalendarModal';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport 'moment/locale/es'\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nimport { clearEventActive } from '../../actions/eventos';\n\nmoment.locale('es')\nconst localizer = momentLocalizer(moment);  \nexport const CalendarScreen = () => {\n  const {events, activeEvent} = useSelector((state: State) => state.calendar)\n  const dispatch = useDispatch()\n  const{\n    lastView,\n    eventStyleGetter,\n    onDoubleClick,\n    onSelectEvent,\n    changeOnView, \n  } = EventsCalendarScreen();\n  const onSelectSlot = (event: any) => {\n    activeEvent.id && dispatch(clearEventActive())\n  }\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n       <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter = {eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView = {changeOnView}\n        view = { lastView }\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n      <AddNewFab />\n      {\n        activeEvent.id && <DeleteEventFab/>\n      }\n     <CalendarModal />\n    </div>\n  )\n}\n","import { useState, ChangeEventHandler } from 'react';\n\n\ninterface UseForm {\n    (initialState: object):[value:object, handleInputChange:ChangeEventHandler]\n}\n\nexport const useForm:UseForm = ( initialState: object = {} ) => {\n    const [values, setValues] = useState(initialState);\n\n    const handleInputChange = ({ target }:any) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n    }\n    return [ values, handleInputChange];\n}\n","import React from \"react\";\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hook/useForm';\n\nimport './login.css';\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  const [loginValues, handleInputChange] = useForm({\n    lEmail: 'jose7@gmail.com',\n    lPassword: '123456'\n  });\n  const { lEmail, lPassword}:any = loginValues;\n  \n  const handlelogin = (event:any) => {\n    event.preventDefault();  \n    dispatch(startLogin(lEmail, lPassword));\n  }\n  \n  const [registerValues, handleRegisterInputChange] = useForm({\n    rName: 'Helis',\n    rEmail: 'helismontes@gmail.com',\n    rPassword: '123456',\n    rPassword2: '123456'\n  });\n  const {rName, rEmail, rPassword, rPassword2}:any = registerValues;\n  \n  const handleRegister = (event:any) => {\n    event.preventDefault();  \n    if(rPassword !== rPassword2) return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\n    dispatch(startRegister(rName, rEmail, rPassword));\n  }\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handlelogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword\"\n                value={rPassword}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                name=\"rPassword2\"\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isLoggedIn,\n    component:Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest } \n            component = { props => (\n                ( !isLoggedIn )\n                    ? ( <Component {...props } />)\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n    isLoggedIn,\n    component:Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest } \n            component = { props => (\n                ( isLoggedIn )\n                    ? ( <Component {...props } />)\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {CalendarScreen} from '../calendar/CalendarScreen'\nimport {LoginScreen} from '../auth/LoginScreen'\nimport { startChecking } from '../../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { State } from '../../ts/interfaces-type';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch()\n  const {checking, uid} = useSelector((state: State) => state.auth)\n  \n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n  \n  if (checking) return (<h5> Espere.....</h5>);\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute \n            exact \n            path=\"/login\" \n            component={LoginScreen}\n            isLoggedIn = {!! uid}\n          />\n          <PrivateRoute \n            exact\n            path=\"/\"\n            component = {CalendarScreen}\n            isLoggedIn = {!! uid}\n          />\n          <Redirect to='/' />\n        </Switch>\n      </div>\n    </Router>\n  );\n}","import React from 'react'\nimport { Provider } from 'react-redux'\nimport {store}from './store/store'\nimport { AppRouter } from './components/router/AppRouter'\n\nexport const CalendarApp = () => {\n\treturn (\n    <Provider store ={store}>\n      <AppRouter />\n    </Provider>\n\t)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './style.css'\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}